{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"tf_tutorial_logistic_regression.ipynb의 사본","version":"0.3.2","provenance":[{"file_id":"1FPf9JpCJU7xEc6iIzX0SdwllTGTmK1eo","timestamp":1564537428976}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"S7Z_CA9qii-9","colab_type":"code","colab":{}},"source":["import tensorflow as tf"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"t2ABewXpisuM","colab_type":"code","colab":{}},"source":["x_data = [[1, 2],\n","          [2, 3],\n","          [3, 1],\n","          [4, 3],\n","          [5, 3],\n","          [6, 2]]\n","y_data = [[0],\n","          [0],\n","          [0],\n","          [1],\n","          [1],\n","          [1]]\n","\n","x_test_data = [[1,1], [5,4], [2,1], [6,3]] \n","y_test_data = [[0], [1], [0], [1]]"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"V5BHnLaoi7DP","colab_type":"text"},"source":["## Placeholders"]},{"cell_type":"code","metadata":{"id":"MhxjJwAwiszo","colab_type":"code","colab":{}},"source":["# placeholders for a tensor that will be always fed.\n","x = tf.placeholder(tf.float32, shape=[None, 2], name=\"x_ph\") # batch가 얼마나 들어올지를 몰라서\n","# 2차원 행렬이면 일렬로 펴서 넣는다.\n","y = tf.placeholder(tf.float32, shape=[None, 1], name=\"y_ph\")"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"E-uymUtkjG_X","colab_type":"text"},"source":["## Variables"]},{"cell_type":"code","metadata":{"id":"AjlSLg2Ris3I","colab_type":"code","colab":{}},"source":["W = tf.Variable(tf.random_normal([2, 1]), name='weight') # (7,2) * (2,1) => (7,1)\n","b = tf.Variable(tf.random_normal([1]), name='bias')      # bias는 1로 그냥 했다고 본다."],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GmY6dzYqjXKj","colab_type":"text"},"source":["## Build a Model"]},{"cell_type":"code","metadata":{"id":"I26HgC-djKjD","colab_type":"code","colab":{}},"source":["# Hypothesis using sigmoid\n","hypothesis = tf.sigmoid(tf.matmul(x, W) + b) # sigmoid를 씌움.\n","\n","# cost/loss function ( Cross Entropy )\n","\n","# tf.nn.sigmoid_cross_entropy_with_logits(labels=y,logits=hypothesis) \n","# sigmoid와 cross entorpy 빼고 이렇게 해도 된다. 대신 reduce_mean해주어야 함.\n","\n","cost = -tf.reduce_mean(y * tf.log(hypothesis) + (1 - y) *\n","                       tf.log(1 - hypothesis))\n","\n","train = tf.train.GradientDescentOptimizer(learning_rate=0.01).minimize(cost)\n","\n","# Accuracy computation\n","# True if hypothesis > 0.5 else False\n","predicted = tf.cast(hypothesis > 0.5, dtype=tf.float32)\n","accuracy = tf.reduce_mean(tf.cast(tf.equal(predicted, y), dtype=tf.float32))\n","# 얼마나 잘 맞췄는지."],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-lllq3zRjvx-","colab_type":"text"},"source":["## Train a Model (session call)"]},{"cell_type":"code","metadata":{"id":"xTTkMd8MjKwB","colab_type":"code","outputId":"d0094d37-89f4-495a-fccc-67e03a0b7f8e","executionInfo":{"status":"ok","timestamp":1564538093290,"user_tz":-540,"elapsed":5312,"user":{"displayName":"군고구마","photoUrl":"https://lh5.googleusercontent.com/-I0XUuvaS1h0/AAAAAAAAAAI/AAAAAAAAAC4/1a-GQoFjqY4/s64/photo.jpg","userId":"10196243389166907276"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["# Launch graph\n","with tf.Session() as sess:\n","    sess.run(tf.global_variables_initializer())\n","\n","    for step in range(10001):\n","        cost_val, _ = sess.run([cost, train], feed_dict={x: x_data, y: y_data})\n","        if step % 200 == 0:\n","            print(step, cost_val)\n","\n","    # Accuracy report\n","    hypothesis_val, pred_val, acc_val = sess.run([hypothesis, predicted, accuracy],\n","                       feed_dict={x: x_test_data, y: y_test_data})\n","    print(\"\\nHypothesis: \", hypothesis_val, \"\\nCorrect : \", pred_val, \"\\nAccuracy: \", acc_val)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["0 3.8931007\n","200 0.6806634\n","400 0.52442175\n","600 0.45826232\n","800 0.4235158\n","1000 0.4009823\n","1200 0.383931\n","1400 0.3696992\n","1600 0.3571181\n","1800 0.34562954\n","2000 0.33494672\n","2200 0.32491088\n","2400 0.3154274\n","2600 0.30643448\n","2800 0.29788834\n","3000 0.28975525\n","3200 0.28200713\n","3400 0.27461967\n","3600 0.2675712\n","3800 0.26084188\n","4000 0.25441322\n","4200 0.24826817\n","4400 0.2423905\n","4600 0.23676525\n","4800 0.23137842\n","5000 0.22621663\n","5200 0.22126754\n","5400 0.21651952\n","5600 0.21196163\n","5800 0.20758365\n","6000 0.20337598\n","6200 0.19932957\n","6400 0.19543606\n","6600 0.19168742\n","6800 0.1880763\n","7000 0.18459572\n","7200 0.18123902\n","7400 0.17800027\n","7600 0.17487347\n","7800 0.17185335\n","8000 0.16893463\n","8200 0.16611256\n","8400 0.16338266\n","8600 0.16074064\n","8800 0.15818249\n","9000 0.15570436\n","9200 0.15330268\n","9400 0.15097417\n","9600 0.14871557\n","9800 0.14652377\n","10000 0.14439602\n","\n","Hypothesis:  [[0.02054883]\n"," [0.9583905 ]\n"," [0.08558913]\n"," [0.9865155 ]] \n","Correct :  [[0.]\n"," [1.]\n"," [0.]\n"," [1.]] \n","Accuracy:  1.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Y_Nk9FFjvKlI","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}