{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Colab and TF Basics (DIY).ipynb의 190729","version":"0.3.2","provenance":[{"file_id":"1X9mDhxTVTAKQhOnKOmPvDqpmbXsdZZv7","timestamp":1564362855627},{"file_id":"14iu4DPHWa7xncG6n33Ow47Flw1Ipiq1U","timestamp":1551078315505}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"ysLnw9I4RHsB","colab_type":"text"},"source":["# Welcome to Colab!\n","\n","Colab은 클라우드 환경에서 구동되는 Jupyter notebook (ipython notebook) 개발 환경입니다.\n","\n","또한, Colab은 GPU 혹은 TPU 하드웨어 가속을 지원합니다. (일반적으로 GPU 가속이 더 좋은 성능을 보입니다)\n","\n","한 번 시험해볼까요?\n"]},{"cell_type":"code","metadata":{"id":"ACUh03O5RvZu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":36},"outputId":"f0a525c8-019f-4a1a-ed50-dd3cf1b06120","executionInfo":{"status":"ok","timestamp":1564363021614,"user_tz":-540,"elapsed":901,"user":{"displayName":"군고구마","photoUrl":"https://lh5.googleusercontent.com/-I0XUuvaS1h0/AAAAAAAAAAI/AAAAAAAAAC4/1a-GQoFjqY4/s64/photo.jpg","userId":"10196243389166907276"}}},"source":["print('hello world')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["hello world\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"GtZbfL7KZGEj","colab_type":"text"},"source":["그래프를 그리는 matplotlib와 같은 라이브러리를 이용하여 시각화를 할 수도 있습니다. 이 때, 시각화된 그래프가 환경에 바로 표시됩니다."]},{"cell_type":"code","metadata":{"id":"3sDo2sl3ZRQn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":36},"outputId":"e18332e8-39da-41c1-f0f7-7ff10f3fdca5","executionInfo":{"status":"ok","timestamp":1564363071000,"user_tz":-540,"elapsed":3401,"user":{"displayName":"군고구마","photoUrl":"https://lh5.googleusercontent.com/-I0XUuvaS1h0/AAAAAAAAAAI/AAAAAAAAAC4/1a-GQoFjqY4/s64/photo.jpg","userId":"10196243389166907276"}}},"source":["# Your code here\n","!pip --version"],"execution_count":2,"outputs":[{"output_type":"stream","text":["pip 19.1.1 from /usr/local/lib/python3.6/dist-packages/pip (python 3.6)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"pFLo_MO3O4ig","colab_type":"text"},"source":["## Shell 사용\n","느낌표(!)로 시작되는 명령줄은 python 대신 shell에서 실행됩니다.\n","이를 활용하여 디렉토리를 생성하거나 (mkdir) python 패키지들을 관리(pip)할 수 있습니다.\n","\n","현재 어떤 패키지들이 설치되어 있는지 확인해볼까요?"]},{"cell_type":"markdown","metadata":{"id":"Tpf114AEPtgS","colab_type":"text"},"source":["'pip install' 명령어를 이용하여 새로운 패키지를 설치할 수 있습니다."]},{"cell_type":"code","metadata":{"id":"NrFr1zlOPeP8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":36},"outputId":"f49c75f9-d02f-4710-adf4-7452e08fad16","executionInfo":{"status":"ok","timestamp":1564363105594,"user_tz":-540,"elapsed":2423,"user":{"displayName":"군고구마","photoUrl":"https://lh5.googleusercontent.com/-I0XUuvaS1h0/AAAAAAAAAAI/AAAAAAAAAC4/1a-GQoFjqY4/s64/photo.jpg","userId":"10196243389166907276"}}},"source":["!ls"],"execution_count":5,"outputs":[{"output_type":"stream","text":["sample_data\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"33jOzxLiPzY_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"outputId":"680b534a-a092-4fe3-cccf-e6e25754099f","executionInfo":{"status":"ok","timestamp":1564363175004,"user_tz":-540,"elapsed":4104,"user":{"displayName":"군고구마","photoUrl":"https://lh5.googleusercontent.com/-I0XUuvaS1h0/AAAAAAAAAAI/AAAAAAAAAC4/1a-GQoFjqY4/s64/photo.jpg","userId":"10196243389166907276"}}},"source":["!pip install matplotlib-venn # 벤다이어 그램 그리기"],"execution_count":8,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: matplotlib-venn in /usr/local/lib/python3.6/dist-packages (0.11.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from matplotlib-venn) (1.3.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from matplotlib-venn) (3.0.3)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from matplotlib-venn) (1.16.4)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->matplotlib-venn) (2.4.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->matplotlib-venn) (1.1.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->matplotlib-venn) (0.10.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->matplotlib-venn) (2.5.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from kiwisolver>=1.0.1->matplotlib->matplotlib-venn) (41.0.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from cycler>=0.10->matplotlib->matplotlib-venn) (1.12.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Dm2A1p6OZcs1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":250},"outputId":"55cc5b41-2cca-4f3d-dfb4-2e865a9b7aef","executionInfo":{"status":"ok","timestamp":1564363253000,"user_tz":-540,"elapsed":977,"user":{"displayName":"군고구마","photoUrl":"https://lh5.googleusercontent.com/-I0XUuvaS1h0/AAAAAAAAAAI/AAAAAAAAAC4/1a-GQoFjqY4/s64/photo.jpg","userId":"10196243389166907276"}}},"source":["# Your code here\n","from matplotlib_venn import venn2\n","\n","venn = venn2(subsets= ( 3,2,1 ))"],"execution_count":11,"outputs":[{"output_type":"display_data","data":{"image/png":"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\ngg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"RClsnz_rUaTX","colab_type":"text"},"source":["### Data Pre-processing\n","- NLP : 최종목표는 비서\n","- 단어 뜻의 모호성 때문에 앞뒤 문장을 잘 이해해야 한다.\n","- 명사/조사 등등 구분을 해줘서 가져오기.\n","\n","### 방법\n","1. HTML 태그\n","2. 정규표현식\n","3. 불용어\n","4...\n","\n","\n","\n","### Tokenization\n","\n","1. 띄어 쓰기 기준.\n","\n","2. 문장부호도 기준으로 떼어내기.\n","Data-mining같은 것이 의미가 사라짐. => 예외를 둔다.\n","\n","3. Input text.\n","\n","* 토큰화 고려할 문제사항\n","\n","she/'/s 에서 '를 분리하는 상황.\n","Do/n't\n","Data / - / mining"]},{"cell_type":"markdown","metadata":{"id":"en4On5z2L55l","colab_type":"text"},"source":["# TensorFlow Basics\n"]},{"cell_type":"markdown","metadata":{"id":"t_rSPPeuVdF3","colab_type":"text"},"source":["TensorFlow는 정적 그래프를 바탕으로 동작합니다. 이는 매 계산 시 동일한 계산 과정을 수행한다는 의미입니다. TensorFlow에서 동적 그래프의 사용은 아직 실험적입니다.\n","\n","따라서 TensorFlow의 사용은 크게 두 단계로 진행됩니다.\n","\n","1.   그래프 생성 – 변수와 계산 과정을 정의\n","2.   데이터를 입력하여 그래프에 따라 계산 수행\n","\n","1단계는 메소드를 정의하는 것으로, 그리고 2단계는 정의된 메소드에 값을 주고 실제 계산을 수행하는 것으로 이해할 수 있습니다.\n","\n","예를 들어, python으로 두 숫자를 입력 받아 그 합계를 반환하는 다음 함수를 볼까요?\n","\n"]},{"cell_type":"code","metadata":{"id":"WxpTky0cWAhp","colab_type":"code","colab":{}},"source":["# Your code here"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ORAjjcQSWMdY","colab_type":"text"},"source":["여기서 'add' 메소드는 계산 과정을 정의한 것이므로 값을 주고 계산을 실행하기 전까지는 아무런 일도 수행하지 않습니다."]},{"cell_type":"code","metadata":{"id":"1G-4znOPWITE","colab_type":"code","colab":{}},"source":["# Your code here"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nNYsTLghWj_i","colab_type":"text"},"source":["메소드를 사용하기 위해서는 다음과 같이 값을 입력으로 주고 실행하는 과정이 필요합니다."]},{"cell_type":"code","metadata":{"id":"NRCPmonnWpM9","colab_type":"code","colab":{}},"source":["# Your code here"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qqQsjE6oWw5c","colab_type":"text"},"source":["TensorFlow에서 그래프를 제작하는 것은 메소드를 정의하는 것과 유사합니다.\n","\n","이번에는 앞서 정의한 'add'메소드와 동일한 역할을 수행하는 계산 그래프를 TensorFlow를 이용하여 제작해봅시다. (1단계)"]},{"cell_type":"code","metadata":{"id":"dz90XTapBJWD","colab_type":"code","colab":{}},"source":["# Your code here"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8Uaf7wyWW_e1","colab_type":"code","colab":{}},"source":["# Your code here"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"So2XoMfaXtij","colab_type":"text"},"source":["앞서 살펴본 python 메소드와 같이, TensorFlow를 이용하여 제작한 'add' 그래프는 그 자체로는 아무런 기능도 수행하지 않습니다.\n","\n","1.   항목 추가\n","2.   항목 추가\n","\n"]},{"cell_type":"code","metadata":{"id":"DsnHYA6GXXMO","colab_type":"code","colab":{}},"source":["# Your code here"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TbQAGsTOXaCl","colab_type":"text"},"source":["해당 그래프를 이용하기 위해서는 아래와 같이 입력값을 주고 계산을 실행해야 합니다. (2단계)"]},{"cell_type":"code","metadata":{"id":"PN2daFHKXvqy","colab_type":"code","colab":{}},"source":["# Your code here"],"execution_count":0,"outputs":[]}]}